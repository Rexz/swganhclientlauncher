//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientLauncher.LauncherData {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerInfo", Namespace="http://schemas.datacontract.org/2004/07/LauncherData")]
    [System.SerializableAttribute()]
    public partial class ServerInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CharsCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LauncherPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PopulationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RSSFeedUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SafeFolderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CharsCreated {
            get {
                return this.CharsCreatedField;
            }
            set {
                if ((this.CharsCreatedField.Equals(value) != true)) {
                    this.CharsCreatedField = value;
                    this.RaisePropertyChanged("CharsCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LauncherPort {
            get {
                return this.LauncherPortField;
            }
            set {
                if ((this.LauncherPortField.Equals(value) != true)) {
                    this.LauncherPortField = value;
                    this.RaisePropertyChanged("LauncherPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Population {
            get {
                return this.PopulationField;
            }
            set {
                if ((this.PopulationField.Equals(value) != true)) {
                    this.PopulationField = value;
                    this.RaisePropertyChanged("Population");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RSSFeedUrl {
            get {
                return this.RSSFeedUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.RSSFeedUrlField, value) != true)) {
                    this.RSSFeedUrlField = value;
                    this.RaisePropertyChanged("RSSFeedUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SafeFolderName {
            get {
                return this.SafeFolderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SafeFolderNameField, value) != true)) {
                    this.SafeFolderNameField = value;
                    this.RaisePropertyChanged("SafeFolderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ServerId {
            get {
                return this.ServerIdField;
            }
            set {
                if ((this.ServerIdField.Equals(value) != true)) {
                    this.ServerIdField = value;
                    this.RaisePropertyChanged("ServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LauncherVersion", Namespace="http://schemas.datacontract.org/2004/07/LauncherData")]
    [System.SerializableAttribute()]
    public partial class LauncherVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatchNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid VersionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatchNotes {
            get {
                return this.PatchNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.PatchNotesField, value) != true)) {
                    this.PatchNotesField = value;
                    this.RaisePropertyChanged("PatchNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid VersionId {
            get {
                return this.VersionIdField;
            }
            set {
                if ((this.VersionIdField.Equals(value) != true)) {
                    this.VersionIdField = value;
                    this.RaisePropertyChanged("VersionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersionNumber {
            get {
                return this.VersionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionNumberField, value) != true)) {
                    this.VersionNumberField = value;
                    this.RaisePropertyChanged("VersionNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LatestFile", Namespace="http://schemas.datacontract.org/2004/07/LauncherData")]
    [System.SerializableAttribute()]
    public partial class LatestFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileBytes {
            get {
                return this.FileBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.FileBytesField, value) != true)) {
                    this.FileBytesField = value;
                    this.RaisePropertyChanged("FileBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomTre", Namespace="http://schemas.datacontract.org/2004/07/LauncherData")]
    [System.SerializableAttribute()]
    public partial class CustomTre : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MD5HashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UriField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MD5Hash {
            get {
                return this.MD5HashField;
            }
            set {
                if ((object.ReferenceEquals(this.MD5HashField, value) != true)) {
                    this.MD5HashField = value;
                    this.RaisePropertyChanged("MD5Hash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uri {
            get {
                return this.UriField;
            }
            set {
                if ((object.ReferenceEquals(this.UriField, value) != true)) {
                    this.UriField = value;
                    this.RaisePropertyChanged("Uri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StandardTre", Namespace="http://schemas.datacontract.org/2004/07/LauncherData")]
    [System.SerializableAttribute()]
    public partial class StandardTre : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MD5HashField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MD5Hash {
            get {
                return this.MD5HashField;
            }
            set {
                if ((object.ReferenceEquals(this.MD5HashField, value) != true)) {
                    this.MD5HashField = value;
                    this.RaisePropertyChanged("MD5Hash");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LauncherData.ILauncherData")]
    public interface ILauncherData {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILauncherData/GetServers", ReplyAction="http://tempuri.org/ILauncherData/GetServersResponse")]
        System.Collections.Generic.List<ClientLauncher.LauncherData.ServerInfo> GetServers();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILauncherData/GetServers", ReplyAction="http://tempuri.org/ILauncherData/GetServersResponse")]
        System.IAsyncResult BeginGetServers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ClientLauncher.LauncherData.ServerInfo> EndGetServers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILauncherData/UpdateServer", ReplyAction="http://tempuri.org/ILauncherData/UpdateServerResponse")]
        void UpdateServer(ClientLauncher.LauncherData.ServerInfo theServerInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILauncherData/UpdateServer", ReplyAction="http://tempuri.org/ILauncherData/UpdateServerResponse")]
        System.IAsyncResult BeginUpdateServer(ClientLauncher.LauncherData.ServerInfo theServerInfo, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateServer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILauncherData/GetLatestVersion", ReplyAction="http://tempuri.org/ILauncherData/GetLatestVersionResponse")]
        System.Collections.Generic.List<ClientLauncher.LauncherData.LauncherVersion> GetLatestVersion(string strCurrentVersion);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILauncherData/GetLatestVersion", ReplyAction="http://tempuri.org/ILauncherData/GetLatestVersionResponse")]
        System.IAsyncResult BeginGetLatestVersion(string strCurrentVersion, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ClientLauncher.LauncherData.LauncherVersion> EndGetLatestVersion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILauncherData/GetLatestExecutable", ReplyAction="http://tempuri.org/ILauncherData/GetLatestExecutableResponse")]
        ClientLauncher.LauncherData.LatestFile GetLatestExecutable();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILauncherData/GetLatestExecutable", ReplyAction="http://tempuri.org/ILauncherData/GetLatestExecutableResponse")]
        System.IAsyncResult BeginGetLatestExecutable(System.AsyncCallback callback, object asyncState);
        
        ClientLauncher.LauncherData.LatestFile EndGetLatestExecutable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILauncherData/GetCustomTre", ReplyAction="http://tempuri.org/ILauncherData/GetCustomTreResponse")]
        System.Collections.Generic.List<ClientLauncher.LauncherData.CustomTre> GetCustomTre(System.Guid guServerId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILauncherData/GetCustomTre", ReplyAction="http://tempuri.org/ILauncherData/GetCustomTreResponse")]
        System.IAsyncResult BeginGetCustomTre(System.Guid guServerId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ClientLauncher.LauncherData.CustomTre> EndGetCustomTre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILauncherData/GetStandardTre", ReplyAction="http://tempuri.org/ILauncherData/GetStandardTreResponse")]
        System.Collections.Generic.List<ClientLauncher.LauncherData.StandardTre> GetStandardTre();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILauncherData/GetStandardTre", ReplyAction="http://tempuri.org/ILauncherData/GetStandardTreResponse")]
        System.IAsyncResult BeginGetStandardTre(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ClientLauncher.LauncherData.StandardTre> EndGetStandardTre(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILauncherDataChannel : ClientLauncher.LauncherData.ILauncherData, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ClientLauncher.LauncherData.ServerInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ClientLauncher.LauncherData.ServerInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ClientLauncher.LauncherData.LauncherVersion> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ClientLauncher.LauncherData.LauncherVersion>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestExecutableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestExecutableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ClientLauncher.LauncherData.LatestFile Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ClientLauncher.LauncherData.LatestFile)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomTreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomTreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ClientLauncher.LauncherData.CustomTre> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ClientLauncher.LauncherData.CustomTre>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStandardTreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStandardTreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ClientLauncher.LauncherData.StandardTre> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ClientLauncher.LauncherData.StandardTre>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LauncherDataClient : System.ServiceModel.ClientBase<ClientLauncher.LauncherData.ILauncherData>, ClientLauncher.LauncherData.ILauncherData {
        
        private BeginOperationDelegate onBeginGetServersDelegate;
        
        private EndOperationDelegate onEndGetServersDelegate;
        
        private System.Threading.SendOrPostCallback onGetServersCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateServerDelegate;
        
        private EndOperationDelegate onEndUpdateServerDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateServerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestVersionDelegate;
        
        private EndOperationDelegate onEndGetLatestVersionDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestExecutableDelegate;
        
        private EndOperationDelegate onEndGetLatestExecutableDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestExecutableCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomTreDelegate;
        
        private EndOperationDelegate onEndGetCustomTreDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomTreCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStandardTreDelegate;
        
        private EndOperationDelegate onEndGetStandardTreDelegate;
        
        private System.Threading.SendOrPostCallback onGetStandardTreCompletedDelegate;
        
        public LauncherDataClient() {
        }
        
        public LauncherDataClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LauncherDataClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LauncherDataClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LauncherDataClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetServersCompletedEventArgs> GetServersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateServerCompleted;
        
        public event System.EventHandler<GetLatestVersionCompletedEventArgs> GetLatestVersionCompleted;
        
        public event System.EventHandler<GetLatestExecutableCompletedEventArgs> GetLatestExecutableCompleted;
        
        public event System.EventHandler<GetCustomTreCompletedEventArgs> GetCustomTreCompleted;
        
        public event System.EventHandler<GetStandardTreCompletedEventArgs> GetStandardTreCompleted;
        
        public System.Collections.Generic.List<ClientLauncher.LauncherData.ServerInfo> GetServers() {
            return base.Channel.GetServers();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetServers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ClientLauncher.LauncherData.ServerInfo> EndGetServers(System.IAsyncResult result) {
            return base.Channel.EndGetServers(result);
        }
        
        private System.IAsyncResult OnBeginGetServers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetServers(callback, asyncState);
        }
        
        private object[] OnEndGetServers(System.IAsyncResult result) {
            System.Collections.Generic.List<ClientLauncher.LauncherData.ServerInfo> retVal = this.EndGetServers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServersCompleted(object state) {
            if ((this.GetServersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServersCompleted(this, new GetServersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServersAsync() {
            this.GetServersAsync(null);
        }
        
        public void GetServersAsync(object userState) {
            if ((this.onBeginGetServersDelegate == null)) {
                this.onBeginGetServersDelegate = new BeginOperationDelegate(this.OnBeginGetServers);
            }
            if ((this.onEndGetServersDelegate == null)) {
                this.onEndGetServersDelegate = new EndOperationDelegate(this.OnEndGetServers);
            }
            if ((this.onGetServersCompletedDelegate == null)) {
                this.onGetServersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServersCompleted);
            }
            base.InvokeAsync(this.onBeginGetServersDelegate, null, this.onEndGetServersDelegate, this.onGetServersCompletedDelegate, userState);
        }
        
        public void UpdateServer(ClientLauncher.LauncherData.ServerInfo theServerInfo) {
            base.Channel.UpdateServer(theServerInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateServer(ClientLauncher.LauncherData.ServerInfo theServerInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateServer(theServerInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateServer(System.IAsyncResult result) {
            base.Channel.EndUpdateServer(result);
        }
        
        private System.IAsyncResult OnBeginUpdateServer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ClientLauncher.LauncherData.ServerInfo theServerInfo = ((ClientLauncher.LauncherData.ServerInfo)(inValues[0]));
            return this.BeginUpdateServer(theServerInfo, callback, asyncState);
        }
        
        private object[] OnEndUpdateServer(System.IAsyncResult result) {
            this.EndUpdateServer(result);
            return null;
        }
        
        private void OnUpdateServerCompleted(object state) {
            if ((this.UpdateServerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateServerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateServerAsync(ClientLauncher.LauncherData.ServerInfo theServerInfo) {
            this.UpdateServerAsync(theServerInfo, null);
        }
        
        public void UpdateServerAsync(ClientLauncher.LauncherData.ServerInfo theServerInfo, object userState) {
            if ((this.onBeginUpdateServerDelegate == null)) {
                this.onBeginUpdateServerDelegate = new BeginOperationDelegate(this.OnBeginUpdateServer);
            }
            if ((this.onEndUpdateServerDelegate == null)) {
                this.onEndUpdateServerDelegate = new EndOperationDelegate(this.OnEndUpdateServer);
            }
            if ((this.onUpdateServerCompletedDelegate == null)) {
                this.onUpdateServerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateServerCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateServerDelegate, new object[] {
                        theServerInfo}, this.onEndUpdateServerDelegate, this.onUpdateServerCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<ClientLauncher.LauncherData.LauncherVersion> GetLatestVersion(string strCurrentVersion) {
            return base.Channel.GetLatestVersion(strCurrentVersion);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLatestVersion(string strCurrentVersion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestVersion(strCurrentVersion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ClientLauncher.LauncherData.LauncherVersion> EndGetLatestVersion(System.IAsyncResult result) {
            return base.Channel.EndGetLatestVersion(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strCurrentVersion = ((string)(inValues[0]));
            return this.BeginGetLatestVersion(strCurrentVersion, callback, asyncState);
        }
        
        private object[] OnEndGetLatestVersion(System.IAsyncResult result) {
            System.Collections.Generic.List<ClientLauncher.LauncherData.LauncherVersion> retVal = this.EndGetLatestVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestVersionCompleted(object state) {
            if ((this.GetLatestVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestVersionCompleted(this, new GetLatestVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestVersionAsync(string strCurrentVersion) {
            this.GetLatestVersionAsync(strCurrentVersion, null);
        }
        
        public void GetLatestVersionAsync(string strCurrentVersion, object userState) {
            if ((this.onBeginGetLatestVersionDelegate == null)) {
                this.onBeginGetLatestVersionDelegate = new BeginOperationDelegate(this.OnBeginGetLatestVersion);
            }
            if ((this.onEndGetLatestVersionDelegate == null)) {
                this.onEndGetLatestVersionDelegate = new EndOperationDelegate(this.OnEndGetLatestVersion);
            }
            if ((this.onGetLatestVersionCompletedDelegate == null)) {
                this.onGetLatestVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestVersionCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestVersionDelegate, new object[] {
                        strCurrentVersion}, this.onEndGetLatestVersionDelegate, this.onGetLatestVersionCompletedDelegate, userState);
        }
        
        public ClientLauncher.LauncherData.LatestFile GetLatestExecutable() {
            return base.Channel.GetLatestExecutable();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLatestExecutable(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestExecutable(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ClientLauncher.LauncherData.LatestFile EndGetLatestExecutable(System.IAsyncResult result) {
            return base.Channel.EndGetLatestExecutable(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestExecutable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetLatestExecutable(callback, asyncState);
        }
        
        private object[] OnEndGetLatestExecutable(System.IAsyncResult result) {
            ClientLauncher.LauncherData.LatestFile retVal = this.EndGetLatestExecutable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestExecutableCompleted(object state) {
            if ((this.GetLatestExecutableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestExecutableCompleted(this, new GetLatestExecutableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestExecutableAsync() {
            this.GetLatestExecutableAsync(null);
        }
        
        public void GetLatestExecutableAsync(object userState) {
            if ((this.onBeginGetLatestExecutableDelegate == null)) {
                this.onBeginGetLatestExecutableDelegate = new BeginOperationDelegate(this.OnBeginGetLatestExecutable);
            }
            if ((this.onEndGetLatestExecutableDelegate == null)) {
                this.onEndGetLatestExecutableDelegate = new EndOperationDelegate(this.OnEndGetLatestExecutable);
            }
            if ((this.onGetLatestExecutableCompletedDelegate == null)) {
                this.onGetLatestExecutableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestExecutableCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestExecutableDelegate, null, this.onEndGetLatestExecutableDelegate, this.onGetLatestExecutableCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<ClientLauncher.LauncherData.CustomTre> GetCustomTre(System.Guid guServerId) {
            return base.Channel.GetCustomTre(guServerId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomTre(System.Guid guServerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomTre(guServerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ClientLauncher.LauncherData.CustomTre> EndGetCustomTre(System.IAsyncResult result) {
            return base.Channel.EndGetCustomTre(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomTre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid guServerId = ((System.Guid)(inValues[0]));
            return this.BeginGetCustomTre(guServerId, callback, asyncState);
        }
        
        private object[] OnEndGetCustomTre(System.IAsyncResult result) {
            System.Collections.Generic.List<ClientLauncher.LauncherData.CustomTre> retVal = this.EndGetCustomTre(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomTreCompleted(object state) {
            if ((this.GetCustomTreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomTreCompleted(this, new GetCustomTreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomTreAsync(System.Guid guServerId) {
            this.GetCustomTreAsync(guServerId, null);
        }
        
        public void GetCustomTreAsync(System.Guid guServerId, object userState) {
            if ((this.onBeginGetCustomTreDelegate == null)) {
                this.onBeginGetCustomTreDelegate = new BeginOperationDelegate(this.OnBeginGetCustomTre);
            }
            if ((this.onEndGetCustomTreDelegate == null)) {
                this.onEndGetCustomTreDelegate = new EndOperationDelegate(this.OnEndGetCustomTre);
            }
            if ((this.onGetCustomTreCompletedDelegate == null)) {
                this.onGetCustomTreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomTreCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomTreDelegate, new object[] {
                        guServerId}, this.onEndGetCustomTreDelegate, this.onGetCustomTreCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<ClientLauncher.LauncherData.StandardTre> GetStandardTre() {
            return base.Channel.GetStandardTre();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStandardTre(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStandardTre(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ClientLauncher.LauncherData.StandardTre> EndGetStandardTre(System.IAsyncResult result) {
            return base.Channel.EndGetStandardTre(result);
        }
        
        private System.IAsyncResult OnBeginGetStandardTre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetStandardTre(callback, asyncState);
        }
        
        private object[] OnEndGetStandardTre(System.IAsyncResult result) {
            System.Collections.Generic.List<ClientLauncher.LauncherData.StandardTre> retVal = this.EndGetStandardTre(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStandardTreCompleted(object state) {
            if ((this.GetStandardTreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStandardTreCompleted(this, new GetStandardTreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStandardTreAsync() {
            this.GetStandardTreAsync(null);
        }
        
        public void GetStandardTreAsync(object userState) {
            if ((this.onBeginGetStandardTreDelegate == null)) {
                this.onBeginGetStandardTreDelegate = new BeginOperationDelegate(this.OnBeginGetStandardTre);
            }
            if ((this.onEndGetStandardTreDelegate == null)) {
                this.onEndGetStandardTreDelegate = new EndOperationDelegate(this.OnEndGetStandardTre);
            }
            if ((this.onGetStandardTreCompletedDelegate == null)) {
                this.onGetStandardTreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStandardTreCompleted);
            }
            base.InvokeAsync(this.onBeginGetStandardTreDelegate, null, this.onEndGetStandardTreDelegate, this.onGetStandardTreCompletedDelegate, userState);
        }
    }
}
